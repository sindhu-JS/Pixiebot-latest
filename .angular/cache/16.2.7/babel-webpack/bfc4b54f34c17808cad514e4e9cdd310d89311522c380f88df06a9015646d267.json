{"ast":null,"code":"/***************************************************************************************************\n * Load `$localize` onto the global scope - used if i18n tags appear in Angular templates.\n */\nimport '@angular/localize/init';\n/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\nif (typeof window !== 'undefined') {\n  window.global = window;\n}\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\nimport 'core-js/es/symbol';\nimport 'core-js/es/object';\nimport 'core-js/es/function';\nimport 'core-js/es/parse-int';\nimport 'core-js/es/parse-float';\nimport 'core-js/es/number';\nimport 'core-js/es/math';\nimport 'core-js/es/string';\nimport 'core-js/es/date';\nimport 'core-js/es/array';\nimport 'core-js/es/regexp';\nimport 'core-js/es/map';\nimport 'core-js/es/weak-map';\nimport 'core-js/es/set';\nimport 'core-js/es/reflect'; // Run `npm install --save classlist.js`.  // Run `npm install --save web-animations-js`.\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags.ts';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js'; // Included with Angular CLI.\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */","map":{"version":3,"names":["window","global"],"sources":["/Users/sindhujayaraman/Documents/GitHub/Pixiebot-latest/src/polyfills.ts"],"sourcesContent":["/***************************************************************************************************\n * Load `$localize` onto the global scope - used if i18n tags appear in Angular templates.\n */\nimport '@angular/localize/init';\n/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\nif (typeof window !== 'undefined') {\n    (window as any).global = window;\n}\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\nimport 'core-js/es/symbol';\nimport 'core-js/es/object';\nimport 'core-js/es/function';\nimport 'core-js/es/parse-int';\nimport 'core-js/es/parse-float';\nimport 'core-js/es/number';\nimport 'core-js/es/math';\nimport 'core-js/es/string';\nimport 'core-js/es/date';\nimport 'core-js/es/array';\nimport 'core-js/es/regexp';\nimport 'core-js/es/map';\nimport 'core-js/es/weak-map';\nimport 'core-js/es/set';\nimport 'core-js/es/reflect';  // Run `npm install --save classlist.js`.  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags.ts';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n"],"mappings":"AAAA;;;AAGA,OAAO,wBAAwB;AAC/B;;;;;;;;;;;;;;;AAgBA;;;AAGA,IAAI,OAAOA,MAAM,KAAK,WAAW,EAAE;EAC9BA,MAAc,CAACC,MAAM,GAAGD,MAAM;;AAGnC;AACA,OAAO,mBAAmB;AAC1B,OAAO,mBAAmB;AAC1B,OAAO,qBAAqB;AAC5B,OAAO,sBAAsB;AAC7B,OAAO,wBAAwB;AAC/B,OAAO,mBAAmB;AAC1B,OAAO,iBAAiB;AACxB,OAAO,mBAAmB;AAC1B,OAAO,iBAAiB;AACxB,OAAO,kBAAkB;AACzB,OAAO,mBAAmB;AAC1B,OAAO,gBAAgB;AACvB,OAAO,qBAAqB;AAC5B,OAAO,gBAAgB;AACvB,OAAO,oBAAoB,CAAC,CAAE;AAE9B;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;;AAGA,OAAO,SAAS,CAAC,CAAE;AAGnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}